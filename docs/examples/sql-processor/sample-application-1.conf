# SimpleSqlProcessor Example
#
# Apply the SimpleSqlProcessor to a single file, using an inline SQL and variables
#
SimpleSqlProcessor: {
  # Input configuration: tables descriptions, variables and the query to be ran
  input: {
    # It contains a map of table names that need to be associated with the files
    # Please keep in mind that for local resources the path needs to be relative to the sql-processor.sh script file
    tables {
      "table1": {
        path: "resources/file1.json",
        format: "json"
      }
    }
    variables {
      columns: "*"
      filter_id: "1001"
    }
    # The query that will be applied on the input tables
    # The query must be written on a single line.
    # All quotes must be escaped.
    sql.line: "SELECT {{columns}} FROM table1 WHERE table1.id='{{filter_id}}'"
  }
  output: {
    # The path where the results will be saved
    path: "tmp/out-example-1"
    # The format of the output file; acceptable values are "json", "avro", "json" and "parquet"
    format: "json"
    # Output mode: append, overwrite,...
    mode: "overwrite"
    # The output partition columns
    partition.columns: ["id", "timestamp"]
  }
}
